// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package routes

import (
	"github.com/google/wire"
	"podcast/controllers"
	"podcast/database"
	"podcast/gateways/mailing"
	"podcast/gateways/stripe"
	"podcast/gateways/upload"
	"podcast/repositories"
	"podcast/services"
)

// Injectors from wire.go:

func CreateAuthController() *controllers.AuthController {
	db := database.Connection()
	usersRepository := repositories.NewUsersRepository(db)
	smtpMailer := mailing.NewSMTPMailer()
	emailService := services.NewEmailService(smtpMailer)
	authService := services.NewAuthService(usersRepository, emailService)
	authController := controllers.NewAuthController(authService)
	return authController
}

func CreatePodcastsController() *controllers.PodcastsController {
	db := database.Connection()
	podcastsRepository := repositories.NewPodcastsRepository(db)
	usersRepository := repositories.NewUsersRepository(db)
	subscriptionsRepository := repositories.NewSubscriptionsRepository(db)
	usersService := services.NewUsersService(usersRepository, subscriptionsRepository)
	stripeGateway := stripe.NewStripeGateway()
	stripeService := services.NewStripeService(stripeGateway, subscriptionsRepository, usersService)
	podcastsService := services.NewPodcastsService(podcastsRepository, usersService, stripeService)
	localFileHandler := upload.NewLocalFileHandler()
	podcastsController := controllers.NewPodcastsController(podcastsService, localFileHandler)
	return podcastsController
}

func CreateEpisodesController() *controllers.EpisodesController {
	db := database.Connection()
	episodesRepository := repositories.NewEpisodesRepository(db)
	podcastsRepository := repositories.NewPodcastsRepository(db)
	usersRepository := repositories.NewUsersRepository(db)
	subscriptionsRepository := repositories.NewSubscriptionsRepository(db)
	usersService := services.NewUsersService(usersRepository, subscriptionsRepository)
	stripeGateway := stripe.NewStripeGateway()
	stripeService := services.NewStripeService(stripeGateway, subscriptionsRepository, usersService)
	podcastsService := services.NewPodcastsService(podcastsRepository, usersService, stripeService)
	episodesService := services.NewEpisodesService(episodesRepository, podcastsService, usersService)
	localFileHandler := upload.NewLocalFileHandler()
	episodesController := controllers.NewEpisodesController(episodesService, usersService, localFileHandler)
	return episodesController
}

func CreateWebhooksController() *controllers.WebhooksController {
	stripeGateway := stripe.NewStripeGateway()
	db := database.Connection()
	subscriptionsRepository := repositories.NewSubscriptionsRepository(db)
	usersRepository := repositories.NewUsersRepository(db)
	usersService := services.NewUsersService(usersRepository, subscriptionsRepository)
	stripeService := services.NewStripeService(stripeGateway, subscriptionsRepository, usersService)
	webhooksController := controllers.NewWebhooksController(stripeService)
	return webhooksController
}

func CreateStripeController() *controllers.StripeController {
	stripeGateway := stripe.NewStripeGateway()
	db := database.Connection()
	subscriptionsRepository := repositories.NewSubscriptionsRepository(db)
	usersRepository := repositories.NewUsersRepository(db)
	usersService := services.NewUsersService(usersRepository, subscriptionsRepository)
	stripeService := services.NewStripeService(stripeGateway, subscriptionsRepository, usersService)
	stripeController := controllers.NewStripeController(stripeService, usersService)
	return stripeController
}

func CreateSubscriptionsController() *controllers.SubscriptionsController {
	db := database.Connection()
	subscriptionsRepository := repositories.NewSubscriptionsRepository(db)
	usersRepository := repositories.NewUsersRepository(db)
	usersService := services.NewUsersService(usersRepository, subscriptionsRepository)
	stripeGateway := stripe.NewStripeGateway()
	stripeService := services.NewStripeService(stripeGateway, subscriptionsRepository, usersService)
	podcastsRepository := repositories.NewPodcastsRepository(db)
	podcastsService := services.NewPodcastsService(podcastsRepository, usersService, stripeService)
	subscriptionsService := services.NewSubscriptionsService(subscriptionsRepository, usersService, stripeService, podcastsService)
	subscriptionsController := controllers.NewSubscriptionsController(subscriptionsService)
	return subscriptionsController
}

// wire.go:

var podcastUserStripeSet = wire.NewSet(services.NewPodcastsService, repositories.NewPodcastsRepository, stripeServiceSet)

var stripeServiceSet = wire.NewSet(services.NewUsersService, repositories.NewUsersRepository, services.NewStripeService, stripe.NewStripeGateway, repositories.NewSubscriptionsRepository, database.Connection)

var fileUploadSet = wire.NewSet(wire.Bind(new(upload.FileHandler), new(*upload.LocalFileHandler)), upload.NewLocalFileHandler)
